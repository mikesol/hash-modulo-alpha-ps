module Exprs.Bert.Bert2 where

import Prelude

import Expr(Expr(..))

expr :: Expr Unit String
expr = App unit (Lam unit "torch-jit-export" (App unit (Var unit "func[torch-jit-export]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[input_ids]")) (Var unit "var[attention_mask]")) (Var unit "var[token_type_ids]")))) (App unit (Lam unit "var[%321]" (App unit (Lam unit "var[%322]" (App unit (Lam unit "var[%323]" (App unit (Lam unit "var[%324]" (App unit (Lam unit "var[%325]" (App unit (Lam unit "var[%326]" (App unit (Lam unit "var[%327]" (App unit (Lam unit "var[%328]" (App unit (Lam unit "var[%329]" (App unit (Lam unit "var[%330]" (App unit (Lam unit "var[%331]" (App unit (Lam unit "var[%332]" (App unit (Lam unit "var[%333]" (App unit (Lam unit "var[%334]" (App unit (Lam unit "var[%335]" (App unit (Lam unit "var[%336]" (App unit (Lam unit "var[%337]" (App unit (Lam unit "var[%338]" (App unit (Lam unit "var[%339]" (App unit (Lam unit "var[%340]" (App unit (Lam unit "var[%341]" (App unit (Lam unit "var[%342]" (App unit (Lam unit "var[%343]" (App unit (Lam unit "var[%344]" (App unit (Lam unit "var[%345]" (App unit (Lam unit "var[%346]" (App unit (Lam unit "var[%347]" (App unit (Lam unit "var[%348]" (App unit (Lam unit "var[%349]" (App unit (Lam unit "var[%350]" (App unit (Lam unit "var[%351]" (App unit (Lam unit "var[%352]" (App unit (Lam unit "var[%353]" (App unit (Lam unit "var[%354]" (App unit (Lam unit "var[bert.embeddings.LayerNorm.bias]" (App unit (Lam unit "var[bert.embeddings.LayerNorm.weight]" (App unit (Lam unit "var[bert.embeddings.position_embeddings.weight]" (App unit (Lam unit "var[bert.embeddings.position_ids]" (App unit (Lam unit "var[bert.embeddings.token_type_embeddings.weight]" (App unit (Lam unit "var[bert.embeddings.word_embeddings.weight]" (App unit (Lam unit "var[bert.encoder.layer.0.attention.output.LayerNorm.bias]" (App unit (Lam unit "var[bert.encoder.layer.0.attention.output.LayerNorm.weight]" (App unit (Lam unit "var[bert.encoder.layer.0.attention.output.dense.bias]" (App unit (Lam unit "var[bert.encoder.layer.0.attention.self.key.bias]" (App unit (Lam unit "var[bert.encoder.layer.0.attention.self.query.bias]" (App unit (Lam unit "var[bert.encoder.layer.0.attention.self.value.bias]" (App unit (Lam unit "var[bert.encoder.layer.0.intermediate.dense.bias]" (App unit (Lam unit "var[bert.encoder.layer.0.output.LayerNorm.bias]" (App unit (Lam unit "var[bert.encoder.layer.0.output.LayerNorm.weight]" (App unit (Lam unit "var[bert.encoder.layer.0.output.dense.bias]" (App unit (Lam unit "var[bert.encoder.layer.1.attention.output.LayerNorm.bias]" (App unit (Lam unit "var[bert.encoder.layer.1.attention.output.LayerNorm.weight]" (App unit (Lam unit "var[bert.encoder.layer.1.attention.output.dense.bias]" (App unit (Lam unit "var[bert.encoder.layer.1.attention.self.key.bias]" (App unit (Lam unit "var[bert.encoder.layer.1.attention.self.query.bias]" (App unit (Lam unit "var[bert.encoder.layer.1.attention.self.value.bias]" (App unit (Lam unit "var[bert.encoder.layer.1.intermediate.dense.bias]" (App unit (Lam unit "var[bert.encoder.layer.1.output.LayerNorm.bias]" (App unit (Lam unit "var[bert.encoder.layer.1.output.LayerNorm.weight]" (App unit (Lam unit "var[bert.encoder.layer.1.output.dense.bias]" (App unit (Lam unit "var[qa_outputs.bias]" (App unit (Lam unit "var[$beg_of_internal_inits]" (App unit (Lam unit "var[$end_of_inits]" (App unit (Lam unit "var[%43]" (App unit (Lam unit "var[%44]" (App unit (Lam unit "var[%45]" (App unit (Lam unit "var[%46]" (App unit (Lam unit "var[%47]" (App unit (Lam unit "var[%48]" (App unit (Lam unit "var[%49]" (App unit (Lam unit "var[%50]" (App unit (Lam unit "var[%51]" (App unit (Lam unit "var[%52]" (App unit (Lam unit "var[%56]" (App unit (Lam unit "var[%58]" (App unit (Lam unit "var[%59]" (App unit (Lam unit "var[%60]" (App unit (Lam unit "var[%61]" (App unit (Lam unit "var[%62]" (App unit (Lam unit "var[%63]" (App unit (Lam unit "var[%64]" (App unit (Lam unit "var[%66]" (App unit (Lam unit "var[%67]" (App unit (Lam unit "var[%68]" (App unit (Lam unit "var[%70]" (App unit (Lam unit "var[%71]" (App unit (Lam unit "var[%72]" (App unit (Lam unit "var[%73]" (App unit (Lam unit "var[%74]" (App unit (Lam unit "var[%75]" (App unit (Lam unit "var[%76]" (App unit (Lam unit "var[%77]" (App unit (Lam unit "var[%79]" (App unit (Lam unit "var[%80]" (App unit (Lam unit "var[%82]" (App unit (Lam unit "var[%83]" (App unit (Lam unit "var[%85]" (App unit (Lam unit "var[%86]" (App unit (Lam unit "var[%87]" (App unit (Lam unit "var[%88]" (App unit (Lam unit "var[%89]" (App unit (Lam unit "var[%90]" (App unit (Lam unit "var[%91]" (App unit (Lam unit "var[%92]" (App unit (Lam unit "var[%95]" (App unit (Lam unit "var[%96]" (App unit (Lam unit "var[%99]" (App unit (Lam unit "var[%100]" (App unit (Lam unit "var[%101]" (App unit (Lam unit "var[%102]" (App unit (Lam unit "var[%103]" (App unit (Lam unit "var[%104]" (App unit (Lam unit "var[%105]" (App unit (Lam unit "var[%106]" (App unit (Lam unit "var[%107]" (App unit (Lam unit "var[%110]" (App unit (Lam unit "var[%111]" (App unit (Lam unit "var[%114]" (App unit (Lam unit "var[%115]" (App unit (Lam unit "var[%116]" (App unit (Lam unit "var[%117]" (App unit (Lam unit "var[%118]" (App unit (Lam unit "var[%119]" (App unit (Lam unit "var[%120]" (App unit (Lam unit "var[%121]" (App unit (Lam unit "var[%124]" (App unit (Lam unit "var[%125]" (App unit (Lam unit "var[%128]" (App unit (Lam unit "var[%129]" (App unit (Lam unit "var[%130]" (App unit (Lam unit "var[%131]" (App unit (Lam unit "var[%132]" (App unit (Lam unit "var[%133]" (App unit (Lam unit "var[%134]" (App unit (Lam unit "var[%135]" (App unit (Lam unit "var[%136]" (App unit (Lam unit "var[%137]" (App unit (Lam unit "var[%138]" (App unit (Lam unit "var[%139]" (App unit (Lam unit "var[%140]" (App unit (Lam unit "var[%141]" (App unit (Lam unit "var[%142]" (App unit (Lam unit "var[%143]" (App unit (Lam unit "var[%144]" (App unit (Lam unit "var[%146]" (App unit (Lam unit "var[%147]" (App unit (Lam unit "var[%149]" (App unit (Lam unit "var[%150]" (App unit (Lam unit "var[%152]" (App unit (Lam unit "var[%153]" (App unit (Lam unit "var[%154]" (App unit (Lam unit "var[%156]" (App unit (Lam unit "var[%157]" (App unit (Lam unit "var[%158]" (App unit (Lam unit "var[%160]" (App unit (Lam unit "var[%161]" (App unit (Lam unit "var[%162]" (App unit (Lam unit "var[%163]" (App unit (Lam unit "var[%164]" (App unit (Lam unit "var[%165]" (App unit (Lam unit "var[%166]" (App unit (Lam unit "var[%167]" (App unit (Lam unit "var[%169]" (App unit (Lam unit "var[%170]" (App unit (Lam unit "var[%171]" (App unit (Lam unit "var[%172]" (App unit (Lam unit "var[%173]" (App unit (Lam unit "var[%174]" (App unit (Lam unit "var[%175]" (App unit (Lam unit "var[%176]" (App unit (Lam unit "var[%177]" (App unit (Lam unit "var[%178]" (App unit (Lam unit "var[%180]" (App unit (Lam unit "var[%181]" (App unit (Lam unit "var[%182]" (App unit (Lam unit "var[%184]" (App unit (Lam unit "var[%185]" (App unit (Lam unit "var[%186]" (App unit (Lam unit "var[%188]" (App unit (Lam unit "var[%189]" (App unit (Lam unit "var[%190]" (App unit (Lam unit "var[%191]" (App unit (Lam unit "var[%192]" (App unit (Lam unit "var[%193]" (App unit (Lam unit "var[%194]" (App unit (Lam unit "var[%195]" (App unit (Lam unit "var[%197]" (App unit (Lam unit "var[%198]" (App unit (Lam unit "var[%200]" (App unit (Lam unit "var[%201]" (App unit (Lam unit "var[%203]" (App unit (Lam unit "var[%204]" (App unit (Lam unit "var[%205]" (App unit (Lam unit "var[%206]" (App unit (Lam unit "var[%207]" (App unit (Lam unit "var[%208]" (App unit (Lam unit "var[%209]" (App unit (Lam unit "var[%210]" (App unit (Lam unit "var[%213]" (App unit (Lam unit "var[%214]" (App unit (Lam unit "var[%217]" (App unit (Lam unit "var[%218]" (App unit (Lam unit "var[%219]" (App unit (Lam unit "var[%220]" (App unit (Lam unit "var[%221]" (App unit (Lam unit "var[%222]" (App unit (Lam unit "var[%223]" (App unit (Lam unit "var[%224]" (App unit (Lam unit "var[%225]" (App unit (Lam unit "var[%228]" (App unit (Lam unit "var[%229]" (App unit (Lam unit "var[%232]" (App unit (Lam unit "var[%233]" (App unit (Lam unit "var[%234]" (App unit (Lam unit "var[%235]" (App unit (Lam unit "var[%236]" (App unit (Lam unit "var[%237]" (App unit (Lam unit "var[%238]" (App unit (Lam unit "var[%239]" (App unit (Lam unit "var[%242]" (App unit (Lam unit "var[%243]" (App unit (Lam unit "var[%246]" (App unit (Lam unit "var[%247]" (App unit (Lam unit "var[%248]" (App unit (Lam unit "var[%249]" (App unit (Lam unit "var[%250]" (App unit (Lam unit "var[%251]" (App unit (Lam unit "var[%252]" (App unit (Lam unit "var[%253]" (App unit (Lam unit "var[%254]" (App unit (Lam unit "var[%255]" (App unit (Lam unit "var[%256]" (App unit (Lam unit "var[%257]" (App unit (Lam unit "var[%258]" (App unit (Lam unit "var[%259]" (App unit (Lam unit "var[%260]" (App unit (Lam unit "var[%261]" (App unit (Lam unit "var[%262]" (App unit (Lam unit "var[%264]" (App unit (Lam unit "var[%265]" (App unit (Lam unit "var[%267]" (App unit (Lam unit "var[%268]" (App unit (Lam unit "var[%270]" (App unit (Lam unit "var[%271]" (App unit (Lam unit "var[%272]" (App unit (Lam unit "var[%274]" (App unit (Lam unit "var[%275]" (App unit (Lam unit "var[%276]" (App unit (Lam unit "var[%278]" (App unit (Lam unit "var[%279]" (App unit (Lam unit "var[%280]" (App unit (Lam unit "var[%281]" (App unit (Lam unit "var[%282]" (App unit (Lam unit "var[%283]" (App unit (Lam unit "var[%284]" (App unit (Lam unit "var[%285]" (App unit (Lam unit "var[%287]" (App unit (Lam unit "var[%288]" (App unit (Lam unit "var[%289]" (App unit (Lam unit "var[%290]" (App unit (Lam unit "var[%291]" (App unit (Lam unit "var[%292]" (App unit (Lam unit "var[%293]" (App unit (Lam unit "var[%294]" (App unit (Lam unit "var[%295]" (App unit (Lam unit "var[%296]" (App unit (Lam unit "var[%298]" (App unit (Lam unit "var[%299]" (App unit (Lam unit "var[%300]" (App unit (Lam unit "var[%302]" (App unit (Lam unit "var[%303]" (App unit (Lam unit "var[%304]" (App unit (Lam unit "var[%306]" (App unit (Lam unit "var[%307]" (App unit (Lam unit "var[%308]" (App unit (Lam unit "var[%309]" (App unit (Lam unit "var[%310]" (App unit (Lam unit "var[%311]" (App unit (Lam unit "var[%312]" (App unit (Lam unit "var[%313]" (App unit (Lam unit "var[%315]" (App unit (Lam unit "var[%316]" (App unit (Lam unit "var[detuple_lets$1001]" (App unit (Lam unit "var[%318]" (App unit (Lam unit "var[%317]" (App unit (Lam unit "var[output_0]" (App unit (Lam unit "var[output_1]" (Var unit "var[output_1]")) (App unit (Var unit "func[Squeeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%318]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]")))))) (App unit (Var unit "func[Squeeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%317]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]")))))) (App unit (Var unit "func[get$1$2]") (Var unit "var[detuple_lets$1001]")))) (App unit (Var unit "func[get$2$2]") (Var unit "var[detuple_lets$1001]")))) (App unit (Var unit "func[Split]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%316]")) (App unit (Var unit "func[vec]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[1]")) (Var unit "const[1]")))) (Var unit "const[-1]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%315]")) (Var unit "var[qa_outputs.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%313]")) (Var unit "var[%354]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%312]")) (Var unit "var[bert.encoder.layer.1.output.LayerNorm.bias]"))))) (App unit (Var unit "func[Mul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%311]")) (Var unit "var[bert.encoder.layer.1.output.LayerNorm.weight]"))))) (App unit (Var unit "func[Div]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%303]")) (Var unit "var[%310]"))))) (App unit (Var unit "func[Sqrt]") (Var unit "var[%309]")))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%307]")) (Var unit "var[%308]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[9.999999960041972e-13]")))) (App unit (Var unit "func[ReduceMean]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%306]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]"))) (Var unit "const[1]"))))) (App unit (Var unit "func[Pow]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%304]")) (Var unit "var[%353]"))))) (App unit (Var unit "func[Cast_FLOAT]") (Var unit "var[%303]")))) (App unit (Var unit "func[Sub]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%300]")) (Var unit "var[%302]"))))) (App unit (Var unit "func[ReduceMean]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%300]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]"))) (Var unit "const[1]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%299]")) (Var unit "var[%285]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%298]")) (Var unit "var[bert.encoder.layer.1.output.dense.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%296]")) (Var unit "var[%352]"))))) (App unit (Var unit "func[Mul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%294]")) (Var unit "var[%295]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[0.5]")))) (App unit (Var unit "func[Mul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%288]")) (Var unit "var[%293]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%291]")) (Var unit "var[%292]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1.0]")))) (App unit (Var unit "func[Erf]") (Var unit "var[%290]")))) (App unit (Var unit "func[Div]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%288]")) (Var unit "var[%289]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1.4142135381698608]")))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%287]")) (Var unit "var[bert.encoder.layer.1.intermediate.dense.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%285]")) (Var unit "var[%351]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%284]")) (Var unit "var[bert.encoder.layer.1.attention.output.LayerNorm.bias]"))))) (App unit (Var unit "func[Mul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%283]")) (Var unit "var[bert.encoder.layer.1.attention.output.LayerNorm.weight]"))))) (App unit (Var unit "func[Div]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%275]")) (Var unit "var[%282]"))))) (App unit (Var unit "func[Sqrt]") (Var unit "var[%281]")))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%279]")) (Var unit "var[%280]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[9.999999960041972e-13]")))) (App unit (Var unit "func[ReduceMean]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%278]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]"))) (Var unit "const[1]"))))) (App unit (Var unit "func[Pow]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%276]")) (Var unit "var[%350]"))))) (App unit (Var unit "func[Cast_FLOAT]") (Var unit "var[%275]")))) (App unit (Var unit "func[Sub]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%272]")) (Var unit "var[%274]"))))) (App unit (Var unit "func[ReduceMean]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%272]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]"))) (Var unit "const[1]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%271]")) (Var unit "var[%195]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%270]")) (Var unit "var[bert.encoder.layer.1.attention.output.dense.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%268]")) (Var unit "var[%349]"))))) (App unit (Var unit "func[Reshape]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%256]")) (Var unit "var[%267]"))))) (App unit (Var unit "func[Concat]") (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%264]")) (Var unit "var[%265]")) (Var unit "var[%348]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%262]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%259]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%260]")) (Var unit "var[%261]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%256]")))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%257]")) (Var unit "var[%258]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[0]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%256]")))) (App unit (Var unit "func[Transpose]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%255]")) (App unit (Var unit "func[vec]") (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[0]")) (Var unit "const[2]")) (Var unit "const[1]")) (Var unit "const[3]"))))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%254]")) (Var unit "var[%248]"))))) (App unit (Var unit "func[Softmax]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%253]")) (Var unit "const[3]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%252]")) (Var unit "var[%49]"))))) (App unit (Var unit "func[Div]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%250]")) (Var unit "var[%251]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[8.0]")))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%219]")) (Var unit "var[%249]"))))) (App unit (Var unit "func[Transpose]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%233]")) (App unit (Var unit "func[vec]") (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[0]")) (Var unit "const[2]")) (Var unit "const[3]")) (Var unit "const[1]"))))))) (App unit (Var unit "func[Transpose]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%247]")) (App unit (Var unit "func[vec]") (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[0]")) (Var unit "const[2]")) (Var unit "const[1]")) (Var unit "const[3]"))))))) (App unit (Var unit "func[Reshape]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%204]")) (Var unit "var[%246]"))))) (App unit (Var unit "func[Concat]") (App unit (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%242]")) (Var unit "var[%243]")) (Var unit "var[%346]")) (Var unit "var[%347]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%239]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%236]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%237]")) (Var unit "var[%238]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%204]")))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%234]")) (Var unit "var[%235]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[0]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%204]")))) (App unit (Var unit "func[Reshape]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%201]")) (Var unit "var[%232]"))))) (App unit (Var unit "func[Concat]") (App unit (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%228]")) (Var unit "var[%229]")) (Var unit "var[%344]")) (Var unit "var[%345]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%225]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%222]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%223]")) (Var unit "var[%224]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%201]")))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%220]")) (Var unit "var[%221]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[0]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%201]")))) (App unit (Var unit "func[Transpose]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%218]")) (App unit (Var unit "func[vec]") (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[0]")) (Var unit "const[2]")) (Var unit "const[1]")) (Var unit "const[3]"))))))) (App unit (Var unit "func[Reshape]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%198]")) (Var unit "var[%217]"))))) (App unit (Var unit "func[Concat]") (App unit (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%213]")) (Var unit "var[%214]")) (Var unit "var[%342]")) (Var unit "var[%343]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%210]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%207]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%208]")) (Var unit "var[%209]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%198]")))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%205]")) (Var unit "var[%206]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[0]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%198]")))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%203]")) (Var unit "var[bert.encoder.layer.1.attention.self.value.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%195]")) (Var unit "var[%341]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%200]")) (Var unit "var[bert.encoder.layer.1.attention.self.key.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%195]")) (Var unit "var[%340]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%197]")) (Var unit "var[bert.encoder.layer.1.attention.self.query.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%195]")) (Var unit "var[%339]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%194]")) (Var unit "var[bert.encoder.layer.0.output.LayerNorm.bias]"))))) (App unit (Var unit "func[Mul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%193]")) (Var unit "var[bert.encoder.layer.0.output.LayerNorm.weight]"))))) (App unit (Var unit "func[Div]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%185]")) (Var unit "var[%192]"))))) (App unit (Var unit "func[Sqrt]") (Var unit "var[%191]")))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%189]")) (Var unit "var[%190]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[9.999999960041972e-13]")))) (App unit (Var unit "func[ReduceMean]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%188]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]"))) (Var unit "const[1]"))))) (App unit (Var unit "func[Pow]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%186]")) (Var unit "var[%338]"))))) (App unit (Var unit "func[Cast_FLOAT]") (Var unit "var[%185]")))) (App unit (Var unit "func[Sub]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%182]")) (Var unit "var[%184]"))))) (App unit (Var unit "func[ReduceMean]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%182]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]"))) (Var unit "const[1]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%181]")) (Var unit "var[%167]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%180]")) (Var unit "var[bert.encoder.layer.0.output.dense.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%178]")) (Var unit "var[%337]"))))) (App unit (Var unit "func[Mul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%176]")) (Var unit "var[%177]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[0.5]")))) (App unit (Var unit "func[Mul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%170]")) (Var unit "var[%175]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%173]")) (Var unit "var[%174]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1.0]")))) (App unit (Var unit "func[Erf]") (Var unit "var[%172]")))) (App unit (Var unit "func[Div]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%170]")) (Var unit "var[%171]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1.4142135381698608]")))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%169]")) (Var unit "var[bert.encoder.layer.0.intermediate.dense.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%167]")) (Var unit "var[%336]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%166]")) (Var unit "var[bert.encoder.layer.0.attention.output.LayerNorm.bias]"))))) (App unit (Var unit "func[Mul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%165]")) (Var unit "var[bert.encoder.layer.0.attention.output.LayerNorm.weight]"))))) (App unit (Var unit "func[Div]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%157]")) (Var unit "var[%164]"))))) (App unit (Var unit "func[Sqrt]") (Var unit "var[%163]")))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%161]")) (Var unit "var[%162]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[9.999999960041972e-13]")))) (App unit (Var unit "func[ReduceMean]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%160]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]"))) (Var unit "const[1]"))))) (App unit (Var unit "func[Pow]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%158]")) (Var unit "var[%335]"))))) (App unit (Var unit "func[Cast_FLOAT]") (Var unit "var[%157]")))) (App unit (Var unit "func[Sub]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%154]")) (Var unit "var[%156]"))))) (App unit (Var unit "func[ReduceMean]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%154]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]"))) (Var unit "const[1]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%153]")) (Var unit "var[%77]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%152]")) (Var unit "var[bert.encoder.layer.0.attention.output.dense.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%150]")) (Var unit "var[%334]"))))) (App unit (Var unit "func[Reshape]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%138]")) (Var unit "var[%149]"))))) (App unit (Var unit "func[Concat]") (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%146]")) (Var unit "var[%147]")) (Var unit "var[%333]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%144]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%141]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%142]")) (Var unit "var[%143]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%138]")))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%139]")) (Var unit "var[%140]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[0]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%138]")))) (App unit (Var unit "func[Transpose]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%137]")) (App unit (Var unit "func[vec]") (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[0]")) (Var unit "const[2]")) (Var unit "const[1]")) (Var unit "const[3]"))))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%136]")) (Var unit "var[%130]"))))) (App unit (Var unit "func[Softmax]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%135]")) (Var unit "const[3]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%134]")) (Var unit "var[%49]"))))) (App unit (Var unit "func[Div]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%132]")) (Var unit "var[%133]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[8.0]")))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%101]")) (Var unit "var[%131]"))))) (App unit (Var unit "func[Transpose]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%115]")) (App unit (Var unit "func[vec]") (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[0]")) (Var unit "const[2]")) (Var unit "const[3]")) (Var unit "const[1]"))))))) (App unit (Var unit "func[Transpose]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%129]")) (App unit (Var unit "func[vec]") (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[0]")) (Var unit "const[2]")) (Var unit "const[1]")) (Var unit "const[3]"))))))) (App unit (Var unit "func[Reshape]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%86]")) (Var unit "var[%128]"))))) (App unit (Var unit "func[Concat]") (App unit (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%124]")) (Var unit "var[%125]")) (Var unit "var[%331]")) (Var unit "var[%332]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%121]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%118]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%119]")) (Var unit "var[%120]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%86]")))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%116]")) (Var unit "var[%117]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[0]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%86]")))) (App unit (Var unit "func[Reshape]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%83]")) (Var unit "var[%114]"))))) (App unit (Var unit "func[Concat]") (App unit (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%110]")) (Var unit "var[%111]")) (Var unit "var[%329]")) (Var unit "var[%330]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%107]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%104]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%105]")) (Var unit "var[%106]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%83]")))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%102]")) (Var unit "var[%103]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[0]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%83]")))) (App unit (Var unit "func[Transpose]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%100]")) (App unit (Var unit "func[vec]") (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[0]")) (Var unit "const[2]")) (Var unit "const[1]")) (Var unit "const[3]"))))))) (App unit (Var unit "func[Reshape]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%80]")) (Var unit "var[%99]"))))) (App unit (Var unit "func[Concat]") (App unit (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%95]")) (Var unit "var[%96]")) (Var unit "var[%327]")) (Var unit "var[%328]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%92]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%89]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%90]")) (Var unit "var[%91]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%80]")))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%87]")) (Var unit "var[%88]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[0]")))) (App unit (Var unit "func[Shape]") (Var unit "var[%80]")))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%85]")) (Var unit "var[bert.encoder.layer.0.attention.self.value.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%77]")) (Var unit "var[%326]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%82]")) (Var unit "var[bert.encoder.layer.0.attention.self.key.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%77]")) (Var unit "var[%325]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%79]")) (Var unit "var[bert.encoder.layer.0.attention.self.query.bias]"))))) (App unit (Var unit "func[MatMul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%77]")) (Var unit "var[%324]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%76]")) (Var unit "var[bert.embeddings.LayerNorm.bias]"))))) (App unit (Var unit "func[Mul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%75]")) (Var unit "var[bert.embeddings.LayerNorm.weight]"))))) (App unit (Var unit "func[Div]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%67]")) (Var unit "var[%74]"))))) (App unit (Var unit "func[Sqrt]") (Var unit "var[%73]")))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%71]")) (Var unit "var[%72]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[9.999999960041972e-13]")))) (App unit (Var unit "func[ReduceMean]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%70]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]"))) (Var unit "const[1]"))))) (App unit (Var unit "func[Pow]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%68]")) (Var unit "var[%323]"))))) (App unit (Var unit "func[Cast_FLOAT]") (Var unit "var[%67]")))) (App unit (Var unit "func[Sub]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%64]")) (Var unit "var[%66]"))))) (App unit (Var unit "func[ReduceMean]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%64]")) (App unit (Var unit "func[vec]") (Var unit "const[-1]"))) (Var unit "const[1]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%63]")) (Var unit "var[%62]"))))) (App unit (Var unit "func[Add]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%60]")) (Var unit "var[%61]"))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[bert.embeddings.token_type_embeddings.weight]")) (Var unit "var[token_type_ids]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[bert.embeddings.position_embeddings.weight]")) (Var unit "var[%59]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[bert.embeddings.word_embeddings.weight]")) (Var unit "var[input_ids]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Slice]") (App unit (App unit (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[bert.embeddings.position_ids]")) (Var unit "var[%321]")) (Var unit "var[%56]")) (Var unit "var[%322]")) (Var unit "var[%58]"))))) (App unit (Var unit "func[Constant]") (App unit (Var unit "func[vec]") (Var unit "const[1]"))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%52]")) (App unit (Var unit "func[vec]") (Var unit "const[0]")))))) (App unit (Var unit "func[Gather]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "var[%50]")) (Var unit "var[%51]")) (Var unit "const[0]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1]")))) (App unit (Var unit "func[Shape]") (Var unit "var[input_ids]")))) (App unit (Var unit "func[Mul]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%47]")) (Var unit "var[%48]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[-10000.0]")))) (App unit (Var unit "func[Sub]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%46]")) (Var unit "var[%45]"))))) (App unit (Var unit "func[Constant]") (Var unit "const[1.0]")))) (App unit (Var unit "func[Cast_FLOAT]") (Var unit "var[%44]")))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[%43]")) (App unit (Var unit "func[vec]") (Var unit "const[2]")))))) (App unit (Var unit "func[Unsqueeze]") (App unit (App unit (Var unit "makeTuple") (Var unit "var[attention_mask]")) (App unit (Var unit "func[vec]") (Var unit "const[1]")))))) (Var unit "const[99999]"))) (Var unit "const[99999]"))) (App unit (Var unit "func[vec]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[0.0]")) (Var unit "const[0.0]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.1.output.dense.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.1.output.LayerNorm.weight]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.1.output.LayerNorm.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[3072]")) (Var unit "const[bert.encoder.layer.1.intermediate.dense.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.1.attention.self.value.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.1.attention.self.query.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.1.attention.self.key.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.1.attention.output.dense.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.1.attention.output.LayerNorm.weight]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.1.attention.output.LayerNorm.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.0.output.dense.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.0.output.LayerNorm.weight]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.0.output.LayerNorm.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[3072]")) (Var unit "const[bert.encoder.layer.0.intermediate.dense.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.0.attention.self.value.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.0.attention.self.query.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.0.attention.self.key.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.0.attention.output.dense.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.0.attention.output.LayerNorm.weight]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.encoder.layer.0.attention.output.LayerNorm.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[30522]")) (Var unit "const[768]")) (Var unit "const[bert.embeddings.word_embeddings.weight]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[2]")) (Var unit "const[768]")) (Var unit "const[bert.embeddings.token_type_embeddings.weight]"))))) (App unit (Var unit "func[load-from-onnx-int64]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[1]")) (Var unit "const[512]")) (Var unit "const[bert.embeddings.position_ids]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[512]")) (Var unit "const[768]")) (Var unit "const[bert.embeddings.position_embeddings.weight]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.embeddings.LayerNorm.weight]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[bert.embeddings.LayerNorm.bias]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[2]")) (Var unit "const[%354]"))))) (Var unit "const[2.0]"))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[3072]")) (Var unit "const[768]")) (Var unit "const[%352]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[3072]")) (Var unit "const[%351]"))))) (Var unit "const[2.0]"))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[768]")) (Var unit "const[%349]"))))) (App unit (Var unit "func[vec]") (Var unit "const[768]")))) (App unit (Var unit "func[vec]") (Var unit "const[64]")))) (App unit (Var unit "func[vec]") (Var unit "const[12]")))) (App unit (Var unit "func[vec]") (Var unit "const[64]")))) (App unit (Var unit "func[vec]") (Var unit "const[12]")))) (App unit (Var unit "func[vec]") (Var unit "const[64]")))) (App unit (Var unit "func[vec]") (Var unit "const[12]")))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[768]")) (Var unit "const[%341]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[768]")) (Var unit "const[%340]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[768]")) (Var unit "const[%339]"))))) (Var unit "const[2.0]"))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[3072]")) (Var unit "const[768]")) (Var unit "const[%337]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[3072]")) (Var unit "const[%336]"))))) (Var unit "const[2.0]"))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[768]")) (Var unit "const[%334]"))))) (App unit (Var unit "func[vec]") (Var unit "const[768]")))) (App unit (Var unit "func[vec]") (Var unit "const[64]")))) (App unit (Var unit "func[vec]") (Var unit "const[12]")))) (App unit (Var unit "func[vec]") (Var unit "const[64]")))) (App unit (Var unit "func[vec]") (Var unit "const[12]")))) (App unit (Var unit "func[vec]") (Var unit "const[64]")))) (App unit (Var unit "func[vec]") (Var unit "const[12]")))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[768]")) (Var unit "const[%326]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[768]")) (Var unit "const[%325]"))))) (App unit (Var unit "func[load-from-onnx-float32]") (App unit (App unit (App unit (Var unit "makeTuple") (Var unit "const[768]")) (Var unit "const[768]")) (Var unit "const[%324]"))))) (Var unit "const[2.0]"))) (App unit (Var unit "func[vec]") (Var unit "const[1]")))) (App unit (Var unit "func[vec]") (Var unit "const[0]")))